syntax = "proto3";
option go_package=".;proto";
import "enum.proto";


// 登录
message ReqGateLogin {
    string password = 1;
    int32 from = 2;
    uint32 gateId = 3;
}

// 登录成功
message ResGateLogin {
    int32 ret = 1;
    uint32 gameId = 2;
    uint32 roomId = 3;
    uint32 hallId = 4;
}

// 离开
message ReqGateLeave {
    
}

// 踢人
message GateKick {
    KickType type = 1;
}

// 心跳
message HeartBeat {
    uint32 serverType = 1;
    uint32 serverId = 2;
}

// 注册
message Regist {
    uint32 serverType = 1;
    uint32 serverId = 2;
}

// 推送
message GatePushMsg {
    string data = 1;
}

// 请求游戏列表
message GetGameListReq {
    repeated int32 gids = 1;        // 游戏id len=0全部数据 len>0游戏数据
}

// 房间信息
message GameInfo {
    uint32 gameId = 1;              // 游戏id
    GameStatus status = 2;          // 游戏状态
    uint32 startTime = 3;           // 开始时间
    uint32 endTime = 4;             // 结束时间
}

// 答复游戏列表
message GetGameListRsp {
    repeated GameInfo games = 1;
}

// 请求房间列表
message GetRoomListReq {
    int32 gameId = 1;
}

// 房间信息
message RoomInfo {
    uint32 serverId = 1;
    uint32 roomId = 2;
    int32 tag = 3;
}

// 答复房间列表
message GetRoomListRsp {
    repeated RoomInfo rooms = 1;
}

// 请求进入房间
message EnterRoomReq {
    uint32 templeteId = 1;
}

// 进房答复
message EnterRoomRsp {
    repeated uint32 uids = 1;
}

// 进入老虎机
message EnterSlotsReq {
    int32 slotsId = 1;
}

message SlotsElem {
    int32 elem_id = 1;      // 元素id
    string elem_name = 2;   // 元素名称
    int32 multi3 = 3;       // 3个元素倍数
    int32 multi4 = 4;       // 4个元素倍数
    int32 multi5 = 5;       // 5个元素倍数
}

message SlotsLine {
    int32 line_id = 1;
    repeated int32 line_pos = 2;
}

message EnterSlotsRsp {
    int32 GameId = 1;
    repeated SlotsElem elems = 2;   // 元素
    repeated int32 bet = 3;         // 下注额
    repeated int32 level = 4;       // 下注等级
    repeated int32 line = 5;        // 下注线
    repeated SlotsLine lines = 6;   // 中奖线路
}


// 离开老虎机
message LeaveSlotsReq {
    int32 slotsId = 1;
}

// 老虎机摇奖
message SlotsSpinReq {
    int32 uid = 1;
    int32 gameId = 2;
    int32 bet = 3;      // 下注
    int32 level = 4;    // 级别
    int32 lines = 5;    // 线数
}

// Free
message SlotsFree {
    repeated int32 pos = 1;     // free图标位置
    int32 freeSpin = 2;         // 奖励免费摇奖次数
}

// Bonus
message SlotsBonus {
    repeated int32 pos = 1;    // bonus图标位置
    repeated int32 board = 2;  // 界面
    int64 win = 3;             // 中奖额度
    int64 money = 4;           // 金币
}

// 老虎机摇奖
message SlotsSpinRsp {
    int32 uid = 1;
    int32 gameId = 2;
    int64 money = 3;            // 金币
    int64 win = 4;              // 赢钱
    repeated int32 board = 5;   // 面板
    repeated int32 lines = 6;   // 中奖线路
    bool free = 7;              // 中免费游戏
    SlotsFree free_data = 8;    // free数据
    bool bonus = 9;
    SlotsBonus bonus_data = 10; // bonus数据
    int32 leftSpin = 11;        // 剩余免费摇奖次数
}

// 玩家离开房间
message LeaveRoomReq {
    uint32 gateId = 1;
    uint32 roomId = 2;
}

// 玩家离线
message Offline {
    
}

// 开始游戏
message StartGame {
    uint32 roomId = 1;          // 房间ID
    uint32 hallId = 2;          // 大厅ID
    repeated uint32 uids = 3;   // 所有玩家的uid
    uint32 tempId = 4;          // 模板ID
}

// 同步数据
message SyncData {
    string data = 1;
    uint32 roomId = 2;
    uint32 gameId = 3;
}

// 完成数据
message Tap {
    uint32 uid = 1;    // uid
    uint32 roomId = 2;   // roomId
    int32 tap = 3;    // x坐标
    string tips = 4;    // 提示
}

// 空数据
message Empty {
    
}

// 游戏结束
message GameOver {
    string data = 1;    // 游戏结束
    uint32 tempId = 2;   // 房间模板ID
    uint32 roomId = 3;   // 房间ID
}

// 多播消息
message MultiMsg {
    repeated uint32 uids = 1;
    bytes data = 2;
}

// 重连
message Reconnect {
    uint32 tempId = 1;
    uint32 roomId = 2;
    uint32 hallId = 3;
    uint32 gateId = 4;
}

// 测试
message Test {
    uint32 uid = 1;
    int64 startTime = 2;
    int64 endTime = 3;
}

// 通用回复
message CommonRsp {
    ErrorCode code = 1;
}